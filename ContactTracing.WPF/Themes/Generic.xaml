<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ContactTracing.Core.Converters;assembly=ContactTracing.Core"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:p="clr-namespace:ContactTracing.WPF.Properties"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:ContactTracing.Controls">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />
    <converters:LengthToVisibilityConverter x:Key="LengthToVisibilityConverter" />
    <converters:IsPositiveConverter x:Key="IsPositiveConverter" />
    <converters:EditModeToEnabledConverter x:Key="EditModeToEnabledConverter" />
    <converters:EditModeToVisibilityConverter x:Key="EditModeToVisibilityConverter" />
    <converters:CountToEnabledConverter x:Key="CountToEnabledConverter" />
    <converters:SelectedItemToEnabledConverter x:Key="SelectedItemToEnabledConverter" />
    <converters:MultiBooleanToVisibilityConverter x:Key="MultiBooleanToVisibilityConverter" />
    <converters:UppercaseConverter x:Key="UppercaseConverter" />
    <converters:YesToEnabledConverter x:Key="YesToEnabledConverter" />
    <converters:NoToEnabledConverter x:Key="NoToEnabledConverter" />
    <converters:CaseClassificationToDisabledConverter x:Key="CaseClassificationToDisabledConverter" />
    <converters:CaseClassificationToVisibilityConverter x:Key="CaseClassificationToVisibilityConverter" />
    <converters:ColonAdder x:Key="ColonAdder" />
    <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter" />
    <converters:SampleTypeToEnabledConverter x:Key="SampleTypeToEnabledConverter" />
    
    <converters:YesToCheckedConverter x:Key="YesToCheckedConverter" />
    <converters:NoToCheckedConverter x:Key="NoToCheckedConverter" />
    <converters:UnknownToCheckedConverter x:Key="UnknownToCheckedConverter" />

    <converters:NumberToYesConverter x:Key="NumberToYesConverter" />
    <converters:NumberToNoConverter x:Key="NumberToNoConverter" />
    <converters:NumberToUnknownConverter x:Key="NumberToUnknownConverter" />
    <converters:ProgressBarStartButtonEnabledConverter x:Key="ProgressBarStartButtonEnabledConverter" />
    <converters:PCRToVisibilityConverter x:Key="PCRToVisibilityConverter" />
    <converters:BooleanInverter x:Key="BooleanInverter" />
    <converters:PlusOneConverter x:Key="PlusOneConverter" />

    <sys:Boolean x:Key="False">false</sys:Boolean>
    <sys:Boolean x:Key="True">true</sys:Boolean>
    
    <!--<Color x:Key="HighlightColor" A="255" R="154" G ="29" B="32"/>-->
    <!--<Color x:Key="HighlightColor" A="255" R="0" G ="63" B="109"/>-->
    <Color x:Key="NoisedHighlightColor" A="255" R="0" G ="80" B="145"/>
    <Color x:Key="HighlightColor" A="255" R="0" G ="90" B="157"/>
    <Color x:Key="PressedColor" A="255" R="205" G ="230" B="252"/>
    <Color x:Key="DarkTextColor" A="255"            R="51 "  G ="51 "  B="53"/>
    <Color x:Key="MediumTextColor" A="255"          R="98 "  G ="98 "  B="100 "/>
    <Color x:Key="MediumLightTextColor" A="255"     R="133 " G ="133"  B="135 "/>
    <Color x:Key="LightTextColor" A="255"           R="244 " G ="244 " B="248 "/>
    <Color x:Key="WindowBackgroundDarkColor" A="255" R="45 " G ="45 "  B="48 "/>
    <!--<Color x:Key="WindowBackgroundColor" A="255" R="247 " G ="247 "  B="249 "/>-->
    <Color x:Key="WindowBackgroundColor" A="255" R="255 " G ="255 "  B="255 "/>
    <!--<Color x:Key="EditionThemeAccentColor" A="255" R="30" G="71" B="129" />-->
    <Color x:Key="EditionThemeAccentColor" A="255" R="21" G="74" B="138" />
    <Color x:Key="ProjectGridBackgroundColor" A="255" R="244 " G ="244 "  B="246 "/>
    
    <ImageBrush x:Key="NoiseBrush" ImageSource="../Images/noise.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0 128,128" />

    <SolidColorBrush x:Key="EditionThemeAccentBrush" Color="{StaticResource EditionThemeAccentColor}" />

    <SolidColorBrush x:Key="ProjectGridBackgroundBrush" Color="{StaticResource ProjectGridBackgroundColor}" />
    <SolidColorBrush x:Key="RowHighlightBackgroundBrush" Color="#D1D1D3" />
    <SolidColorBrush x:Key="RowHighlightForegroundBrush" Color="#727272" />
    <SolidColorBrush x:Key="WindowBackgroundDarkBrush" Color="{StaticResource WindowBackgroundDarkColor}" />
    <!--<SolidColorBrush x:Key="WindowBackgroundBrush" Color="#EDEDEA" />-->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource WindowBackgroundColor}" />
    <SolidColorBrush x:Key="WindowBorderBrush" Color="#333333" />
    <SolidColorBrush x:Key="DataGridHeaderBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="DataGridHeaderForegroundBrush" Color="{StaticResource MediumTextColor}" />
    <SolidColorBrush x:Key="DataGridGridLineBrush" Color="#D5D5D5" />
    <SolidColorBrush x:Key="DataGridColumnHeaderBackgroundBrush" Color="#C9C9CB" />
    <SolidColorBrush x:Key="DataGridColumnHeaderForegroundBrush" Color="#D5D5D5" />
    <SolidColorBrush x:Key="DataGridColumnHeaderBorderBrush" Color="#D5D5D5" />
    <SolidColorBrush x:Key="DarkTextBrush" Color="{StaticResource DarkTextColor}" />
    <SolidColorBrush x:Key="MediumTextBrush" Color="{StaticResource MediumTextColor}" />
    <SolidColorBrush x:Key="MediumLightTextBrush" Color="{StaticResource MediumLightTextColor}" />
    <SolidColorBrush x:Key="LightTextBrush" Color="{StaticResource LightTextColor}" />
    <SolidColorBrush x:Key="IndividualReportBorderBrush" Color="#333333" />
    <!--<SolidColorBrush x:Key="HatchForegroundBrush" Color="#D7D7D5" />-->
    <SolidColorBrush x:Key="HatchForegroundBrush" Color="White" />
    <!--<SolidColorBrush x:Key="HatchBackgroundBrush" Color="#E6E6E2" />-->
    <SolidColorBrush x:Key="HatchBackgroundBrush" Color="#EBEBEF" />
    <SolidColorBrush x:Key="TabUnderlineBrush" Color="#C9C9CB" />
    <SolidColorBrush x:Key="TabUnderlineSelectedBrush" Color="#6E6E70" />
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource HighlightColor}" />
    <SolidColorBrush x:Key="RoundedButtonTextForegroundBrush" Color="Black" />
    <SolidColorBrush x:Key="RoundedButtonShapeForegroundBrush" Color="{StaticResource HighlightColor}" />
    <SolidColorBrush x:Key="RoundedButtonBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="RoundedButtonBorderBrush" Color="Transparent" />
    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
    <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}" />
    <SolidColorBrush x:Key="DefaultButtonBrush" Color="#4D5E77" />

    <LinearGradientBrush x:Key="LightBackgroundBrush" StartPoint="1,0" EndPoint="1,1">
        <GradientStop Color="#EFF1F3" Offset="0" />
        <GradientStop Color="White" Offset="0.6" />
    </LinearGradientBrush>
    
    <VisualBrush x:Key="HatchBrush" TileMode="Tile" Viewport="0,0,5,5" ViewportUnits="Absolute" Viewbox="0,0,5,5" ViewboxUnits="Absolute">
        <VisualBrush.Visual>
            <Canvas>
                <Rectangle Fill="{StaticResource HatchBackgroundBrush}" Width="6" Height="6" />
                <Path Stroke="{StaticResource HatchForegroundBrush}" Data="M 0 0 l 10 10" />
            </Canvas>
        </VisualBrush.Visual>
    </VisualBrush>
    
    <VisualBrush x:Key="SitrepHatchBrush" TileMode="Tile" Viewport="0,0,5,5" ViewportUnits="Absolute" Viewbox="0,0,5,5" ViewboxUnits="Absolute">
        <VisualBrush.Visual>
            <Canvas>
                <Rectangle Fill="Transparent" Width="6" Height="6" />
                <Path Stroke="Gray" Data="M 0 0 l 5 5" />
            </Canvas>
        </VisualBrush.Visual>
    </VisualBrush>

    <LinearGradientBrush x:Key="DefaultButtonGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#DBF1FC" />
        <GradientStop Offset="0.5" Color="#D0E6F1" />
        <GradientStop Offset="1.0" Color="#BBD4E1" />
    </LinearGradientBrush>

    <Style x:Key="Heading1" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Foreground" Value="{StaticResource MediumTextBrush}" />
    </Style>

    <Style x:Key="Heading2" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource MediumTextBrush}" />
    </Style>

    <Style x:Key="LabelHeading2" TargetType="{x:Type Label}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource MediumTextBrush}" />
    </Style>

    <Style x:Key="RightAlignStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Right" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="NavButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="x1" TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}" VerticalAlignment="Stretch" Height="Auto">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource MediumLightTextBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource DarkTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}" x:Key="FlatToggleButtonStyle" >
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#F0F0F4" />
                    <GradientStop Offset="1" Color="#E6E6EA" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#BBBBBB" />
        <Setter Property="Foreground" Value="{StaticResource DarkTextBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border 
                        x:Name="BorderOuter"
                        BorderBrush="#EFEFEF"
                        BorderThickness="1"
                        >
                    <Border BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    Background="{TemplateBinding Background}" 
                    Padding="{TemplateBinding Padding}" 
                    CornerRadius="0">
                        <ContentControl VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}" />
                    </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <!--<Setter Property="Background" Value="{StaticResource DefaultButtonBrush}" />-->
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#F0F0F4" />
                    <GradientStop Offset="1" Color="#E6E6EA" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#BBBBBB" />
        <Setter Property="Foreground" Value="{StaticResource DarkTextBrush}" />
        <!--<Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Foreground" Value="White" />-->
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        x:Name="BorderOuter"
                        BorderBrush="#EFEFEF"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        >
                        <Border x:Name="PART_Border" BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    Background="{TemplateBinding Background}" 
                    Padding="{TemplateBinding Padding}" 
                    CornerRadius="0">
                            <ContentControl VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}" />
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="PART_Border" 
                                Value="Transparent"/>
                            <Setter Property="Foreground" 
                                Value="{StaticResource MediumTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="FlatButtonStyle" />

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="RoundedButtonStyle" >
        <Setter Property="Background" Value="{StaticResource RoundedButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=RoundedButtonTextForegroundBrush}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource ResourceKey=RoundedButtonTextForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=RoundedButtonBorderBrush}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource MediumTextBrush}" />
                <Setter Property="Background" Value="{StaticResource RoundedButtonBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
                <Setter Property="Background" Value="{StaticResource RoundedButtonBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource MediumTextBrush}" />
                <Setter Property="Background" Value="{StaticResource RoundedButtonBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="BacklessButtonStyle" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=MediumTextBrush}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource ResourceKey=MediumTextBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="White" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive}" Value="False">
                <Setter Property="Background" Value="{StaticResource RowHighlightBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource RowHighlightForegroundBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style 
       TargetType="{x:Type DataGridRow}">
        <Style.Triggers>

            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="#EEF5FB" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="White" />
            </Trigger>

            <DataTrigger Binding="{Binding IsActive}" Value="False">
                <Setter Property="Background" Value="{StaticResource RowHighlightBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource RowHighlightForegroundBrush}"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridDemoStyle"  
       TargetType="{x:Type DataGrid}">
        <!--<Setter Property="VerticalGridLinesBrush" Value="#D5D5D5" />
            <Setter Property="HorizontalGridLinesBrush" Value="#D5D5D5" />-->
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridGridLineBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridGridLineBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DarkTextBrush}"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="EnableColumnVirtualization" Value="True" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <!--<Setter Property="AlternationCount" Value="2" />-->
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="HeadersVisibility" Value="All" />
        <Setter Property="AreRowDetailsFrozen" Value="False" />
        <Setter Property="SelectionMode" Value="Single" />
    </Style>

    <LinearGradientBrush x:Key="mainPanelBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <!--<GradientStop Offset="0" Color="#F4F4F4" />-->

        <!--<GradientStop Offset="0" Color="#DFEEF9" />
        <GradientStop Offset="0.3"  Color="#FFFFFF" />-->
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="gridHeaderBrush" StartPoint="0,0" EndPoint="0,1">
        <!--<GradientStop Offset="0" Color="#F4F4F4" />-->
        <!--<GradientStop Offset="0" Color="#1D5987" />
        <GradientStop Offset="1" Color="#1D5987" />-->
    </LinearGradientBrush>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource DataGridColumnHeaderBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="BorderBrush" Value="{StaticResource DataGridColumnHeaderBorderBrush}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
                <Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderBackgroundBrush}" />
                <Setter Property="BorderBrush"  Value="{StaticResource DataGridColumnHeaderBorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FFFFEE" />
                <Setter Property="BorderBrush" Value="{StaticResource DataGridColumnHeaderBorderBrush}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FFFFEE" />
                <Setter Property="BorderBrush" Value="{StaticResource DataGridColumnHeaderBorderBrush}" />
            </MultiTrigger>
            <Trigger Property="SortDirection" Value="Ascending">
                <Setter Property="Background" Value="#FFE4CC" />
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
                <Setter Property="Background" Value="#FFE4CC" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}" 
                                Padding="2, 3, 2, 3"
                  BorderBrush="{TemplateBinding BorderBrush}"  
                  BorderThickness="{TemplateBinding BorderThickness}" 
                  SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected"
                        Value="True">
                <Setter Property="Background"
                        Value="{StaticResource AccentBrush}" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="White" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <SolidColorBrush x:Key="RowBackgroundAlternationIndex2Brush" Color="#EEF5FB"/>
    <SolidColorBrush x:Key="RowBackgroundAlternationIndex3Brush" Color="#FFFFFF"/>

    <Style x:Key="ProjectGridStyle" TargetType="Grid">
        <!--<Setter Property="Background" Value="#F5F5F5" />-->
        <Setter Property="Background" Value="{StaticResource ProjectGridBackgroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />-->
                <!--#CDD1D2-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LabResultGridStyle" TargetType="Grid">
        <!--<Setter Property="Background" Value="#F5F5F5" />-->
        <Setter Property="Background" Value="#EFF1F3" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />-->
                <!--#CDD1D2-->
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ProjectBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="3" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />-->
                <!--#CDD1D2-->
                <!--<Setter Property="BorderBrush" Value="#CDD1D2" />-->
                <Setter Property="BorderBrush" Value="{StaticResource EditionThemeAccentBrush}" />

                
            </Trigger>
        </Style.Triggers>
    </Style>

    <HierarchicalDataTemplate x:Key="ProjectSummaryViewItemTemplate">
        <Border Style="{StaticResource ProjectBorderStyle}" x:Name="PART_Border" IsHitTestVisible="True" HorizontalAlignment="Left">
            <Grid>
                <Grid x:Name="grdConnectionEditor" Width="640" Height="256" Style="{StaticResource ProjectGridStyle}" Visibility="{Binding IsShowingConnectionEditor, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                    <StackPanel Grid.Row="0" Margin="6">
                        <TextBlock Style="{StaticResource Heading1}" Text="CONNECTION EDITOR" IsHitTestVisible="False" />
                        
                        <StackPanel Height="4" />
                        
                        <TextBlock Style="{StaticResource Heading2}" TextWrapping="Wrap" Text="{Binding OutbreakName}" IsHitTestVisible="False" />
                        
                        <StackPanel Height="10" />
                        
                        <RadioButton GroupName="C1" Content="Local storage" IsChecked="{Binding IsLocalStorage}" />
                        <StackPanel Height="4" />
                        <RadioButton GroupName="C1" Content="SQL Server" IsChecked="{Binding IsServerBasedStorage}" />

                        <StackPanel Height="10" />
                        
                        <TextBlock Text="Connection String:" />
                        <TextBox HorizontalAlignment="Stretch" Text="{Binding InputConnectionString, Mode=TwoWay}" />
                    </StackPanel>

                    <StackPanel Grid.Row="1"  Margin="6" HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button Content="OK" Width="100" Command="{Binding SaveConnectionInformationCommand}" />
                        <Button Content="Cancel" Width="100" Command="{Binding CloseConnectionInformationCommand}" />
                    </StackPanel>
                </Grid>
                <Grid x:Name="grdProject" Width="320" Height="110" Style="{StaticResource ProjectGridStyle}" Visibility="{Binding IsShowingConnectionEditor, Converter={StaticResource BooleanToCollapsedConverter}}">
                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem 
                                Visibility="Visible"
                                IsEnabled="{Binding IsCheckingConnection, Converter={StaticResource BooleanInverter}}"
                                Header="Copy PRJ File" 
                                Command="{Binding CopyProjectCommand}" />
                            <MenuItem 
                                Visibility="Visible"
                                IsEnabled="{Binding IsCheckingConnection, Converter={StaticResource BooleanInverter}}"
                                Header="Change Connection Information" 
                                Command="{Binding ChangeConnectionInformationCommand}" />
                        </ContextMenu>
                    </Grid.ContextMenu>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />                        
                        <RowDefinition Height="Auto" />                        
                    </Grid.RowDefinitions>
                    
                    <!--File scr data-->
                    <TextBlock Visibility="{Binding IsExistingProject, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" Foreground="#333333" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="10, 10, 10, 0" x:Name="projectInfoTitleTextBlock" FontSize="17" FontWeight="SemiBold" Text="{Binding Name}"  IsHitTestVisible="False"/>
                    <TextBlock Visibility="{Binding IsExistingProject, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" Foreground="#333333" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="10, 10, 10, 0" x:Name="projectReg_CultureTextBlock" FontSize="13" FontWeight="SemiBold"    VerticalAlignment="Top"     Text="{Binding  Reg_culture  }"  IsHitTestVisible="False"/>
                    <TextBlock Visibility="{Binding IsExistingProject, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" Foreground="#626262" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="10, 0, 10, 0" x:Name="projectInfoDescTextBlock" FontSize="13" VerticalAlignment="Top" TextWrapping="Wrap" Text="{Binding OutbreakName}"  IsHitTestVisible="False"/>
                    <TextBlock Visibility="{Binding IsExistingProject, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" Foreground="#626262" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="10, 0, 10, 10" x:Name="projectInfoDateTextBlock" FontSize="13" VerticalAlignment="Top" TextWrapping="Wrap" Text="{Binding OutbreakDetectionDate, StringFormat='d'}"  IsHitTestVisible="False"/>

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.RowSpan="100" Grid.ColumnSpan="10" Margin="0, 0, 4, 0">
                        <TextBlock Visibility="{Binding IsConnected, Converter={StaticResource ResourceKey=BooleanToCollapsedConverter}}" 
                                   FontSize="9"
                                   Foreground="Red"
                                   Text="{x:Static p:Resources.Disconnected}">
                        </TextBlock>
                    </StackPanel>
                    <!--<Ellipse Grid.RowSpan="3" Visibility="{Binding IsNewProject, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" 
                             Stroke="#626262" StrokeThickness="6" Width="72" Height="72" VerticalAlignment="Center"></Ellipse>
                    <Path Grid.RowSpan="3" Visibility="{Binding IsNewProject, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" 
                          HorizontalAlignment="Center" VerticalAlignment="Center" Width="38" Height="38" Stretch="Fill" Fill="#626262" Data="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z "/>

                    <TextBlock Visibility="{Binding IsNewProject, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" 
                               Foreground="#333333" Grid.Row="0" Grid.Column="1" Margin="10, 10, 10, 0" Text="Create New Epi NEXT Project"  IsHitTestVisible="False"/>-->
                </Grid>
            </Grid>
        </Border>

        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="PART_Border">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="PART_Border" Duration="00:00:00.125"
                                         Storyboard.TargetProperty="Opacity" From="0" To="1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </DataTemplate.Triggers>

    </HierarchicalDataTemplate>

    <Style TargetType="{x:Type local:ProjectsSummaryView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="x1" TargetType="{x:Type local:ProjectsSummaryView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter DockPanel.Dock="Bottom" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentPresenter}">
                    <Setter Property="Height" Value="Auto"></Setter>
                    <Setter Property="Margin" Value="0,0,2,2"></Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource ProjectSummaryViewItemTemplate}" />
    </Style>

    <ControlTemplate x:Key="TextBoxBaseControlTemplate1" 
          TargetType="{x:Type TextBoxBase}">
        <Border x:Name="Bd" SnapsToDevicePixels="True" 
          Background="{TemplateBinding Background}" 
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}" >
            <ScrollViewer x:Name="PART_ContentHost" 
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Bd" 
            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="Foreground" 
           Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="TextBox" x:Key="DefaultTextBoxStyle">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
    </Style>

    <Style TargetType="TextBox" x:Key="FullTextBoxStyle">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="PanelCloseButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Grid.Column="6" x:Name="PART_Grid" Width="24" Height="24" Margin="4, 0, 1, 0" Visibility="Visible" VerticalAlignment="Bottom">
                        <Rectangle x:Name="PART_Rectangle" Fill="#FF4E4E" >
                            <Rectangle.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="transparent" Offset="0" />
                                            <GradientStop Color="#44ffffff" Offset="1" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Path x:Name="PART_Icon" Stroke="White" IsHitTestVisible="False" Stretch="Fill" Width="10" Height="10" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Data="M 200,0 L 0,200 M 0,0 L 200,200"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Rectangle" Property="Fill" Value="#FF6363" />
                        </Trigger>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="PART_Rectangle" Property="Fill" Value="#FF3737" />
                        </Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="PART_Rectangle" Property="Fill" Value="#9B9B9B" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:LightOnDarkCircleButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="x1" TargetType="{x:Type local:LightOnDarkCircleButton}">
                    <Grid x:Name="PART_Grid" Background="Transparent" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Ellipse x:Name="PART_Circle" Width="28" Height="28" Grid.Row="0" Margin="6, 2, 6, 2" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                 StrokeThickness="2" 
                                 Stroke="White"
                                 Stretch="Fill" 
                                 Fill="Transparent" />
                        <Path x:Name="PART_Shape" HorizontalAlignment="Center" Grid.Row="0" Margin="6, 2, 6, 2" Width="16" Height="16" Stretch="Fill" Fill="White" 
                              Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:LightOnDarkCircleButton}, Mode=FindAncestor}, Path=PathData, Mode=OneTime}"/>

                        <TextBlock x:Name="PART_Text" 
                                   HorizontalAlignment="Center" Grid.Row="1" Margin="1" FontSize="8pt" 
                                   Foreground="White"
                                   Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:LightOnDarkCircleButton}, Mode=FindAncestor}, Path=Text, Mode=OneTime}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter TargetName="PART_Circle" Property="Stroke" Value="#C8C8D2" />
                            <Setter TargetName="PART_Shape" Property="Fill" Value="#C8C8D2" />
                            <Setter TargetName="PART_Text" Property="Foreground" Value="#C8C8D2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Circle" Property="Fill" Value="#0077CE" />
                        </Trigger>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="PART_Circle" Property="Fill" Value="White" />
                            <Setter TargetName="PART_Shape" Property="Fill" Value="{StaticResource AccentBrush}" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Circle" Property="Stroke" Value="{StaticResource DisabledButtonBrush}" />
                            <Setter TargetName="PART_Shape" Property="Fill" Value="{StaticResource DisabledButtonBrush}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DarkOnLightCircleButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=RoundedButtonTextForegroundBrush}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource ResourceKey=RoundedButtonTextForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="x1" TargetType="{x:Type local:DarkOnLightCircleButton}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <!--<Grid x:Name="PART_Grid" Background="Transparent" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>-->

                        <Grid>
                        <Ellipse x:Name="PART_Circle" Width="24" Height="24" Grid.Row="0" Margin="6, 2, 6, 2" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                 StrokeThickness="2" 
                                 Stroke="{StaticResource RoundedButtonShapeForegroundBrush}"
                                 Stretch="Fill" 
                                 Fill="Transparent" />
                        <Path x:Name="PART_Shape" 
                              HorizontalAlignment="Center" 
                              Grid.Row="0" 
                              Margin="6, 2, 6, 2" Width="12" Height="12" 
                              Stretch="Fill" 
                              Fill="{StaticResource RoundedButtonShapeForegroundBrush}" 
                              Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DarkOnLightCircleButton}, Mode=FindAncestor}, Path=PathData, Mode=OneTime}"/>

                        </Grid>
                        
                        <TextBlock x:Name="PART_Text" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center" Grid.Row="1" Margin="1, 1, 5, 1" 
                                   FontSize="8pt" 
                                   Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DarkOnLightCircleButton}, Mode=FindAncestor}, Path=Text, Mode=OneTime}" />
                    <!--</Grid>-->
                    </StackPanel>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Circle" Property="Stroke" Value="#969698" />
                            <Setter TargetName="PART_Text" Property="Foreground" Value="#828282" />
                            <Setter TargetName="PART_Shape" Property="Fill" Value="#969698" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Circle" Property="Fill" Value="White" />
                            <Setter TargetName="PART_Text" Property="Foreground" Value="{StaticResource MediumTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="PART_Circle" Property="Fill" Value="{StaticResource AccentBrush}" />
                            <Setter TargetName="PART_Shape" Property="Fill" Value="White" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Circle" Property="Stroke" Value="{StaticResource DisabledButtonBrush}" />
                            <Setter TargetName="PART_Shape" Property="Fill" Value="{StaticResource DisabledButtonBrush}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    

    <Style TargetType="{x:Type local:SourceCasesSummaryView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SourceCasesSummaryView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}" x:Key="FlatToggleButtonStyle1" >
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#F0F0F4" />
                    <GradientStop Offset="1" Color="#E6E6EA" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#BBBBBB" />
        <Setter Property="Foreground" Value="{StaticResource DarkTextBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border 
                        x:Name="BorderOuter"
                        BorderBrush="#EFEFEF"
                        BorderThickness="1"
                        >
                        <Border BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    Background="{TemplateBinding Background}" 
                    Padding="{TemplateBinding Padding}" 
                    CornerRadius="0">
                            <ContentControl VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="White" />
                <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                <Setter Property="BorderThickness" Value="2" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource LightTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
